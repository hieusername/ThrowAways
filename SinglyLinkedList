#Node holds a 'data' and the next points to nothing
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

#Head classification is initially nothing
class LinkedList:
    def __init__(self):
        self.head = None
#Inserting nodes, first node (newNode) will be assigned as the head node
    def insert(self, newNode):
        if self.head is None:
            self.head = newNode
        else:
            lastNode = self.head
            while True:
                #if Head Node next is nothing, last node is head node which new next is new node
                if lastNode.next is None:
                    break
                #last node will be the head node's next and continue the while loop until "last node" points to none
                lastNode = lastNode.next
            lastNode.next = newNode

    def printlist(self):
        currentNode = self.head
        while True:
            if currentNode is None:
                break
            print(currentNode.data)
            currentNode = currentNode.next

#I NEED HELP AT THIS PART!!!!!!!
    def delete(self, delnode):
        init_node = self.head
        sub_node = self.head.next
        while True:
            if delnode is init_node:
                self.head.next = self.head
                break
            else:
                init_node = self.head.next



#Establishing a linked list
linkedList = LinkedList()

#first node with the data "John"
first_node = Node("John")

#Inserting the first node into the def insert
linkedList.insert(first_node)

second_node = Node(37)

#Inserting second node
linkedList.insert(second_node)

third_node = Node(25)

linkedList.insert(third_node)

linkedList.delete()

linkedList.printlist()

